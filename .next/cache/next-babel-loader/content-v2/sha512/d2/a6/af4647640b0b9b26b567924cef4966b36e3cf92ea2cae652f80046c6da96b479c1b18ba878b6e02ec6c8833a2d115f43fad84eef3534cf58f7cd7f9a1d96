{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Tonio\\\\Works\\\\Max\\\\326-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\n// Meetup Details Component Page\n// DYNAMIC Page\nimport { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\n// const MeetupDetailsPage = () => {\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meetup Details Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail // image=\"images/Kamp's_Earthship.png\"\n    // title=\"Kamp's_Earthship\"\n    // address=\"same, random, address\"\n    // description=\"some random description\"\n    , {\n      image: props.MeetupData.image,\n      title: props.MeetupData.title,\n      address: props.MeetupData.address,\n      description: props.MeetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n}; // when getStaticProps is used on a dynamic page (like this one)\n// getStaticPaths must be provided\n// BECAUSE: every instance of the dynamic page must be pre-generated\n//          at build time e.g for id1,id2, ... id[n-1], id[n]\n\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/Tonio/Works/Max/326-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetailsPage","props","MeetupData","image","title","address","description"],"mappings":";;;;;AAAA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AAIA,OAAOC,YAAP,MAAyB,uCAAzB;;AAOA;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,YAAD,CACE;AACA;AACA;AACA;AAJF;AAKE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAL1B;AAME,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAN1B;AAOE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAP5B;AAQE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AARhC;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAhBD,C,CAkBA;AACA;AACA;AACA;;;KArBMN,iB;;AA2FN,eAAeA,iBAAf","sourcesContent":["// Meetup Details Component Page\r\n// DYNAMIC Page\r\n\r\nimport { Fragment } from 'react'\r\n\r\nimport { MongoClient, ObjectId } from 'mongodb'\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\n\r\nconst uidDb = 'dbUser'\r\nconst pwdDb = 'pr!BRItOXechl2Esp$St'\r\nconst nameDb = 'meetups'\r\nconst uriMongoDb = `mongodb+srv://${uidDb}:${pwdDb}@cluster0.d4upq.mongodb.net/${nameDb}?retryWrites=true&w=majority`\r\n\r\n// const MeetupDetailsPage = () => {\r\nconst MeetupDetailsPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <h1>Meetup Details Page</h1>\r\n      <MeetupDetail\r\n        // image=\"images/Kamp's_Earthship.png\"\r\n        // title=\"Kamp's_Earthship\"\r\n        // address=\"same, random, address\"\r\n        // description=\"some random description\"\r\n        image={props.MeetupData.image}\r\n        title={props.MeetupData.title}\r\n        address={props.MeetupData.address}\r\n        description={props.MeetupData.description}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n// when getStaticProps is used on a dynamic page (like this one)\r\n// getStaticPaths must be provided\r\n// BECAUSE: every instance of the dynamic page must be pre-generated\r\n//          at build time e.g for id1,id2, ... id[n-1], id[n]\r\nexport const getStaticPaths = async () => {\r\n  //\r\n  const mongoClient = await MongoClient.connect(uriMongoDb)\r\n  const meetupsDb = mongoClient.db()\r\n  const meetupsCollection = meetupsDb.collection('meetups')\r\n\r\n  // find({}, {_id: 1})\r\n  //      {} ... empty filter criteria\r\n  //          {_id: 1} ... only pull out the _id values\r\n  const MDB_MEETUPS = await meetupsCollection.find({}, { _id: 1 }).toArray()\r\n\r\n  mongoClient.close()\r\n\r\n  return {\r\n    paths: MDB_MEETUPS.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n    // [\r\n    //   { params: {meetupId: 'm1'} },\r\n    //   { params: {meetupId: 'm2'} },\r\n    //   { params: {meetupId: 'm3'} },\r\n    //   { params: {meetupId: 'm4'} },\r\n    //   { params: {meetupId: 'm5'} },\r\n    // ],\r\n    fallback: false,\r\n  }\r\n}\r\n// fallback: false ... when paths supports all possible paths\r\n// fallback: true  ... when paths does not supports all possible paths\r\n//                     NextJS will try to generate the paths dynamically\r\n\r\nexport const getStaticProps = async (context) => {\r\n  //\r\n  const meetupId = context.params.meetupId\r\n\r\n  // e.g. fetch data from API\r\n  const mongoClient = await MongoClient.connect(uriMongoDb)\r\n  const meetupsDb = mongoClient.db()\r\n  const meetupsCollection = meetupsDb.collection('meetups')\r\n\r\n  // find({}, {_id: 1})\r\n  //      {} ... empty filter criteria\r\n  //          {_id: 1} ... only pull out the _id values\r\n  // const MDB_MEETUPS = await meetupsCollection.find({}, { _id: 1 }).toArray()\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) })\r\n\r\n  mongoClient.close()\r\n\r\n  return {\r\n    props: {\r\n      // meetupData: {\r\n      //   img: \"images/Kamp's_Earthship.png\",\r\n      //   id: meetupId,\r\n      //   title: \"Kamp's_Earthship\",\r\n      //   address: 'same, random, address',\r\n      //   description: 'some random description',\r\n      // },\r\n      // meetupData: selectedMeetup,\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        \r\n      },\r\n    },\r\n    revalidate: 10,\r\n  }\r\n}\r\n\r\nexport default MeetupDetailsPage\r\n"]},"metadata":{},"sourceType":"module"}