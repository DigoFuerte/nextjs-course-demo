{"ast":null,"code":"// NextJS Api Route\n// url ... api/new-meetup\n//... contains an exported function with server-side code\n//... by convention named \"handler\",\n//       the name is mandatory, it could have a name of your choice\nimport { MongoClient } from 'mongodb'; // MongoDB UID:dbUser PWD:pr!BRItOXechl2Esp$St\n// MongoDb Connection String Example\n// const uidDb = 'dbUser'\n// const pwdDb = 'pr!BRItOXechl2Esp$St'\n// const nameDb = 'meetups'\n// const { MongoClient } = require('mongodb');\n// const uriMongoDb = \"mongodb+srv://dbUser:<password>@cluster0.d4upq.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\n// const uriMongoDb = `mongodb+srv://${uidDb}:${pwdDb}@cluster0.d4upq.mongodb.net/${nameDb}?retryWrites=true&w=majority`\n// console.log(uriMongoDb)\n// const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n// client.connect(err => {\n//   const collection = client.db(\"test\").collection(\"devices\");\n//   // perform actions on the collection object\n//   client.close();\n// });\n//req ... request object\n//res ... response object\n\nconst handler = async (req, res) => {\n  //\n  if (req.method === 'POST') {\n    const uidDb = 'dbUser';\n    const pwdDb = 'pr!BRItOXechl2Esp$St';\n    const nameDb = 'meetups';\n    const uriMongoDb = `mongodb+srv://${uidDb}:${pwdDb}@cluster0.d4upq.mongodb.net/${nameDb}?retryWrites=true&w=majority`;\n    console.log(uriMongoDb);\n    const requestData = req.body; // object destructuring\n    //const { title, iamge, address, description } = requestData\n    // connect() returns a promise\n\n    const mdbClient = await MongoClient.connect(uriMongoDb);\n    const meetupsDb = mdbClient.db(); //MongoDb === NO SQL DB\n    //  Collections === Tables\n    //    Documents === Records\n    //      Document === JS Object ... {}\n\n    const meetupsCollection = meetupsDb.collection('meetups');\n    const result = await meetupsCollection.insertOne(requestData);\n    console.log(result);\n    mdbClient.close();\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n};\n\nexport default handler;","map":{"version":3,"sources":["C:/Users/Tonio/Works/Max/326-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","uidDb","pwdDb","nameDb","uriMongoDb","console","log","requestData","body","mdbClient","connect","meetupsDb","db","meetupsCollection","collection","result","insertOne","close","status","json","message"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC;AACA,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AAEzB,UAAMC,KAAK,GAAG,QAAd;AACA,UAAMC,KAAK,GAAG,sBAAd;AACA,UAAMC,MAAM,GAAG,SAAf;AACA,UAAMC,UAAU,GAAI,iBAAgBH,KAAM,IAAGC,KAAM,+BAA8BC,MAAO,8BAAxF;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,UAAMG,WAAW,GAAGT,GAAG,CAACU,IAAxB,CARyB,CAUzB;AACA;AAEA;;AACA,UAAMC,SAAS,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBN,UAApB,CAAxB;AACA,UAAMO,SAAS,GAAGF,SAAS,CAACG,EAAV,EAAlB,CAfyB,CAiBzB;AACA;AACA;AACA;;AACA,UAAMC,iBAAiB,GAAGF,SAAS,CAACG,UAAV,CAAqB,SAArB,CAA1B;AAEA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BT,WAA5B,CAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACAN,IAAAA,SAAS,CAACQ,KAAV;AAEAlB,IAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB;AACD;AACF,CA/BD;;AAiCA,eAAevB,OAAf","sourcesContent":["// NextJS Api Route\r\n// url ... api/new-meetup\r\n//... contains an exported function with server-side code\r\n//... by convention named \"handler\",\r\n//       the name is mandatory, it could have a name of your choice\r\n\r\nimport { MongoClient } from 'mongodb'\r\n\r\n// MongoDB UID:dbUser PWD:pr!BRItOXechl2Esp$St\r\n// MongoDb Connection String Example\r\n// const uidDb = 'dbUser'\r\n// const pwdDb = 'pr!BRItOXechl2Esp$St'\r\n// const nameDb = 'meetups'\r\n// const { MongoClient } = require('mongodb');\r\n// const uriMongoDb = \"mongodb+srv://dbUser:<password>@cluster0.d4upq.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n// const uriMongoDb = `mongodb+srv://${uidDb}:${pwdDb}@cluster0.d4upq.mongodb.net/${nameDb}?retryWrites=true&w=majority`\r\n// console.log(uriMongoDb)\r\n// const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\r\n// client.connect(err => {\r\n//   const collection = client.db(\"test\").collection(\"devices\");\r\n//   // perform actions on the collection object\r\n//   client.close();\r\n// });\r\n\r\n//req ... request object\r\n//res ... response object\r\nconst handler = async (req, res) => {\r\n  //\r\n  if (req.method === 'POST') {\r\n\r\n    const uidDb = 'dbUser'\r\n    const pwdDb = 'pr!BRItOXechl2Esp$St'\r\n    const nameDb = 'meetups'\r\n    const uriMongoDb = `mongodb+srv://${uidDb}:${pwdDb}@cluster0.d4upq.mongodb.net/${nameDb}?retryWrites=true&w=majority`\r\n    console.log(uriMongoDb)\r\n\r\n    const requestData = req.body\r\n\r\n    // object destructuring\r\n    //const { title, iamge, address, description } = requestData\r\n\r\n    // connect() returns a promise\r\n    const mdbClient = await MongoClient.connect(uriMongoDb)\r\n    const meetupsDb = mdbClient.db()\r\n\r\n    //MongoDb === NO SQL DB\r\n    //  Collections === Tables\r\n    //    Documents === Records\r\n    //      Document === JS Object ... {}\r\n    const meetupsCollection = meetupsDb.collection('meetups')\r\n\r\n    const result = await meetupsCollection.insertOne(requestData)\r\n    console.log(result)\r\n    mdbClient.close()\r\n\r\n    res.status(201).json({message: 'Meetup inserted!'})\r\n  }\r\n}\r\n\r\nexport default handler\r\n"]},"metadata":{},"sourceType":"module"}