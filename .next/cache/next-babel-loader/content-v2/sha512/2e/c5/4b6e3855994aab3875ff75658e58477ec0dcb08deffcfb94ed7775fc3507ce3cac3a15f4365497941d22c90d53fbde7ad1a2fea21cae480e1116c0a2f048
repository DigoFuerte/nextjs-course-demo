{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Home Component Page\nimport { Fragment } from 'react'; // import { Fragment, useEffect, useState } from 'react'\n\nimport MeetupList from '../components/meetups/MeetupList'; // import Layout from '../components/layout/Layout'\n// 'https://commons.wikimedia.org/wiki/File:Convection_banner_1.jpg#/media/File:Convection_banner_1.jpg',\n// \"https://commons.wikimedia.org/wiki/File:Kamp%27s_Earthship.png#/media/File:Kamp's_Earthship.png\",\n// 'https://commons.wikimedia.org/wiki/File:Earthship_Brighton_Front.jpg#/media/File:Earthship_Brighton_Front.jpg',\n// 'https://commons.wikimedia.org/wiki/File:Inside_greenhouse_of_Global_model_Earthship.JPG#/media/File:Inside_greenhouse_of_Global_model_Earthship.JPG',\n// 'https://commons.wikimedia.org/wiki/File:G2_Global_model_Earthship_Taos_N.M..JPG#/media/File:G2_Global_model_Earthship_Taos_N.M..JPG',\n\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  image: 'images/Convection_banner.jpg',\n  title: 'Convection banner',\n  address: 'Design',\n  descriptopn: 'meetup one'\n}, {\n  id: 'm2',\n  image: \"images/Kamp's_Earthship.png\",\n  title: \"Kamp's Earthship\",\n  address: 'New Mexico',\n  descriptopn: 'meetup two'\n}, {\n  id: 'm3',\n  image: 'images/Earthship_Brighton_Front.jpg',\n  title: 'Brighton Earthship',\n  address: 'Brighton',\n  descriptopn: 'meetup three'\n}, {\n  id: 'm4',\n  image: 'images/Inside_greenhouse_of_Global_model_Earthship.jpeg',\n  title: 'Inside greenhouse of Global model',\n  address: 'New Mexico',\n  descriptopn: 'meetup four'\n}, {\n  id: 'm5',\n  image: 'images/Global_model_Earthship_Taos_N.M.jpeg',\n  title: 'Global model Earthship Taos',\n  address: 'New Mexico',\n  descriptopn: 'meetup five'\n}]; // props from the pre-render call to getStaticProps\n\nconst HomePage = props => {\n  //\n  // const [loadedMeetups, setLoadedMeetups] = useState([])\n  // the empty dependency array means the effect is run\n  // on the initial render of the component\n  // useEffect(() => {\n  // 1. send http request to fetch meetups data\n  // 2. setLoadedMeetups()\n  // simulate fetching data via an http request\n  // setLoadedMeetups(DUMMY_MEETUPS)\n  // }, [])\n  // ! NOTE: the useEffect function is run after\n  // ! the component function has executed\n  // therefore in the initial render of the component\n  //  loadedMeetups is empty\n  // then the state changes when the useEffect function is executed\n  // this causes the component to be re-rendered... loadedMeetups populated\n  // const testStr = 'hjhkjfghfdkgjh'\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"HomePage\"\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}; // Only for Component Page... NextJS looks for getStaticProps\n// to produce page pre-loaded with data on the server... not client-side\n// getStaticProps gets called before the component function\n// export async function getStaticProps() {\n\n\nexport const getStaticProps = async () => {\n  // e.g fetch data from an API... etc\n  // getStaticProps must always return an object\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  };\n};\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}